{"version":3,"sources":["webpack:///./src/components/Panel.js","webpack:///./src/components/Radio.js","webpack:///./src/components/Select.js","webpack:///./src/pages/calendar.js"],"names":["PanelStyles","styled","div","Panel","children","Label","label","RadioStyles","input","Radio","checked","type","name","value","defaultChecked","SelectStyles","select","secondary","Select","defVal","template","defaultValue","onChange","e","console","log","target","map","item","key","CalendarDate","FormStyles","form","MainStyles","main","HoursStyles","WorkersStyles","WorkerColor","color","r","g","b","Calendar","hours","React","useContext","MainContext","Heading","className","start","workers","id","end"],"mappings":"2FAAA,2DAGMA,EAHN,UAGoBC,EAAOC,IAAV,yEAAGD,CAAH,wfAsCF,SAASE,EAAT,GAA4B,IAAZC,EAAW,EAAXA,SAC3B,OACI,kBAACJ,EAAD,KACKI,K,8ICzCPC,EAAQJ,IAAOK,MAAV,mEAAGL,CAAH,iWA+BLM,EAAcN,IAAOO,MAAV,yEAAGP,CAAH,MAGF,SAASQ,EAAT,GAAqC,IAArBL,EAAoB,EAApBA,SAAUM,EAAU,EAAVA,QACrC,OACI,kBAACL,EAAD,KACI,kBAACE,EAAD,CAAaI,KAAK,QAAQC,KAAK,QAAQC,MAAOT,EAAUU,eAAgBJ,IACxE,8BAAON,ICpCnB,IAAMC,EAAQJ,IAAOK,MAAV,gEAAGL,CAAH,wEAaLc,EAAed,IAAOe,OAAV,uEAAGf,CAAH,oJAEJ,qBAAEgB,UAA2B,wBAA0B,UAEnD,qBAAEA,UAA2B,eAAiB,iBAGnD,qBAAEA,UAA2B,cAAgB,kBAS3C,SAASC,EAAT,GAA4D,IAA1Cd,EAAyC,EAAzCA,SAAUe,EAA+B,EAA/BA,OAAQF,EAAuB,EAAvBA,UAAWG,EAAY,EAAZA,SAC1D,OACI,kBAAC,EAAD,KACI,8BAAOA,EAAP,MACA,kBAACL,EAAD,CAAcE,UAAWA,EAAWI,aAAcF,EAAQG,SAAU,SAACC,GAAD,OAAOC,QAAQC,IAAIF,EAAEG,OAAOb,SACvFT,EAASuB,KAAI,SAAAC,GAAI,OAAI,4BAAQC,IAAKD,EAAKhB,KAAMC,MAAOe,EAAKhB,MAAOgB,EAAKhB,W,4BC7BpFkB,EAAe7B,IAAOC,IAAV,6EAAGD,CAAH,wUA4BZ8B,EAAa9B,IAAO+B,KAAV,2EAAG/B,CAAH,0MAeVgC,EAAahC,IAAOiC,KAAV,2EAAGjC,CAAH,+JAWVkC,EAAclC,IAAOC,IAAV,4EAAGD,CAAH,6KAcXmC,EAAgBnC,IAAOC,IAAV,8EAAGD,CAAH,kJAWboC,EAAcpC,IAAOC,IAAV,4EAAGD,CAAH,+EAGC,oBAAGqC,MAAH,eAAYC,EAAZ,OAAeC,EAAf,OAAkBC,EAAlB,OAKH,SAASC,IAEpB,IAEQC,EAFQC,IAAMC,WAAWC,KAEzBH,MAER,OACI,oCACI,kBAACI,EAAA,EAAD,kBACA,kBAAC5C,EAAA,EAAD,KACI,kBAAC4B,EAAD,CAAYiB,UAAU,eAAe1B,SAAU,SAACC,GAAD,OAAOC,QAAQC,IAAIF,EAAEG,OAAOb,SACvE,kBAACJ,EAAD,CAAOC,SAAO,GAAd,SACA,kBAACD,EAAD,iBAEJ,kBAACqB,EAAD,CAAckB,UAAU,gBACpB,qCACA,oDACA,sCAEJ,kBAAC9B,EAAD,CAAQ8B,UAAU,kBAAkB5B,SAAS,cACxC,CAAC,CAACR,KAAM,WAAY,CAACA,KAAM,eAAgB,CAACA,KAAM,eAAgB,CAACA,KAAM,kBAGlF,kBAACqB,EAAD,KACI,kBAACE,EAAD,KACI,yBAAKa,UAAU,UACX,oCAEHL,EAAMhB,KAAI,gBAAGsB,EAAH,EAAGA,MAAH,OACP,yBAAKD,UAAU,OAAOnB,IAAKoB,GACvB,uBAAGD,UAAU,SAASC,QAIlC,kBAACb,EAAD,KACKc,IAAQvB,KAAI,YAA0B,IAAvBwB,EAAsB,EAAtBA,GAAIvC,EAAkB,EAAlBA,KAAM0B,EAAY,EAAZA,MACtB,OACI,yBAAKU,UAAU,SAASnB,IAAKsB,EAAIb,MAAOA,GACpC,yBAAKU,UAAU,UACX,kBAACX,EAAD,CAAaC,MAAOA,IACpB,2BAAI1B,IAEH+B,EAAMhB,KAAI,gBAAGsB,EAAH,EAAGA,MAAH,EAAUG,IAAV,OACX,yBAAKJ,UAAU,QAAQnB,IAAKoB","file":"component---src-pages-calendar-js-f6efc4847fa87a95bf73.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst PanelStyles = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, auto);\r\n    grid-template-rows: repeat(2, auto);\r\n    background: var(--white);\r\n    border-radius: 6px;\r\n    gap: 10px;\r\n    padding: 5px 10px;\r\n    margin: 80px 10px 20px;\r\n\r\n    @media (min-width: 768px) {\r\n        grid-template-columns: auto 1fr auto;\r\n        grid-template-rows: auto;\r\n        align-items: center;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        .customersButton,\r\n        .calendarForm {\r\n            grid-column: 1 / 2;\r\n            grid-row: 1 / 2\r\n        }\r\n\r\n        .customersInput,\r\n        .calendarDate {\r\n            grid-column: 1 / 3;\r\n            grid-row: 2 / 3;\r\n        }\r\n        .customersViewOptions,\r\n        .calendarWorkers {\r\n            justify-content: flex-end;\r\n        }\r\n\r\n\r\n\r\n    }\r\n`\r\n\r\nexport default function Panel({children}) {\r\n    return (\r\n        <PanelStyles>\r\n            {children}\r\n        </PanelStyles>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Label = styled.label`\r\n    position: relative;\r\n    height: 30px;\r\n    cursor: pointer;\r\n\r\n    input {\r\n        display: none;\r\n    }\r\n\r\n    span {\r\n        position: relative;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        color: var(--darkgrey);\r\n        background: var(--white);\r\n        width: 100%;\r\n        height: 100%;\r\n        border: 1px solid var(--grey);\r\n        font-weight: var(--bold);\r\n        padding: 5px 10px;\r\n\r\n    }\r\n\r\n    input:checked + span{\r\n        background: var(--blue);\r\n        color: var(--white);\r\n    }\r\n\r\n`\r\n\r\nconst RadioStyles = styled.input`\r\n`\r\n\r\nexport default function Radio({children, checked}) {\r\n    return (\r\n        <Label>\r\n            <RadioStyles type=\"radio\" name=\"radio\" value={children} defaultChecked={checked}/>\r\n            <span>{children}</span>\r\n        </Label>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Label = styled.label`\r\n\r\n    span {\r\n        display: none;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n           span {\r\n               display: inline;\r\n           }\r\n    }\r\n`\r\n\r\nconst SelectStyles = styled.select`\r\n    height: 30px;\r\n    border: ${({secondary}) => secondary ? '1px solid var(--blue)' : 'none'};\r\n    border-radius: 6px;\r\n    background: ${({secondary}) => secondary ? 'var(--white)' : 'var(--blue)'};\r\n    font-size: 14px;\r\n    font-weight: var(--bold);\r\n    color: ${({secondary}) => secondary ? 'var(--blue)' : 'var(--white)'};\r\n    /* padding: 0 10px;     */\r\n\r\n    &:hover {\r\n        background: var(--hoverBlue);\r\n    }\r\n\r\n`\r\n\r\nexport default function Select({ children, defVal, secondary, template }) {\r\n    return (\r\n        <Label>\r\n            <span>{template}: </span>\r\n            <SelectStyles secondary={secondary} defaultValue={defVal} onChange={(e) => console.log(e.target.value)}>\r\n                    {children.map(item => <option key={item.name} value={item.name}>{item.name}</option>)}\r\n            </SelectStyles>\r\n        </Label>\r\n    )\r\n}\r\n\r\nSelect.propTypes = {\r\n    children: PropTypes.array,\r\n    template: PropTypes.string\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Heading from '../components/Heading';\r\nimport Panel from '../components/Panel';\r\nimport Radio from '../components/Radio';\r\nimport Select from '../components/Select';\r\nimport { workers, hours } from '../context/data';\r\nimport MainContext from '../context/MainContext';\r\n\r\n\r\nconst CalendarDate = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    \r\n        h2 {\r\n            text-align: center;\r\n            padding: 0 5px;\r\n            font-size: clamp(16px, 20px, 24px);\r\n            white-space: nowrap;\r\n        }\r\n\r\n        button {\r\n            border: none;\r\n            background: transparent;\r\n            font-size: 32px;\r\n            transition: transform .3s;\r\n\r\n            &:nth-child(1):hover {\r\n                transform: translateX(-4px);\r\n            }\r\n\r\n            &:nth-child(3):hover {\r\n                transform: translateX(4px);\r\n            }\r\n        }\r\n`\r\n\r\nconst FormStyles = styled.form`\r\n    display: flex;\r\n\r\n    label:nth-child(1) span{\r\n        border-top-left-radius: 6px;\r\n        border-bottom-left-radius: 6px;\r\n    }\r\n\r\n    label:nth-child(2) span{\r\n        border-top-right-radius: 6px;\r\n        border-bottom-right-radius: 6px;\r\n        border-left: none;\r\n    }\r\n`\r\n\r\nconst MainStyles = styled.main`\r\n    display: grid;\r\n    grid-template-columns: 80px 1fr;\r\n    justify-content: center;\r\n    background: var(--white);\r\n    border-radius: 6px;\r\n    margin: 0 10px 20px;\r\n    overflow-y: scroll;\r\n    flex: 1;\r\n`\r\n\r\nconst HoursStyles = styled.div`\r\n\r\n    .hour {\r\n        height: 50px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex-direction: column;\r\n        border-bottom: 1px solid var(--grey);\r\n        border-right: 1px solid var(--grey);\r\n    }\r\n\r\n`\r\n\r\nconst WorkersStyles = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n\r\n    .field {\r\n        border-bottom: 1px solid var(--grey);\r\n        border-right: 1px solid var(--grey);\r\n        height: 50px;\r\n    }\r\n`\r\n\r\nconst WorkerColor = styled.div`\r\n    width: 20px;\r\n    height: 20px;\r\n    background: ${({ color: { r, g, b } }) => `rgb(${r}, ${g}, ${b})`};\r\n    margin-right: 5px;\r\n    border-radius: 6px;\r\n`\r\n\r\nexport default function Calendar() {\r\n\r\n    const context = React.useContext(MainContext)\r\n\r\n    const { hours } = context;\r\n\r\n    return (\r\n        <>\r\n            <Heading>Kalendarz</Heading>\r\n            <Panel>\r\n                <FormStyles className=\"calendarForm\" onChange={(e) => console.log(e.target.value)}>\r\n                    <Radio checked>Dzień</Radio>\r\n                    <Radio>Tydzień</Radio>\r\n                </FormStyles>\r\n                <CalendarDate className=\"calendarDate\">\r\n                    <button>&#x21E0;</button>\r\n                    <h2>19 października 2020</h2>\r\n                    <button>&#x21E2;</button>\r\n                </CalendarDate>\r\n                <Select className=\"calendarWorkers\" template=\"Pracownicy\">\r\n                    {[{name: 'Wszyscy'}, {name: 'Pracownik 1'}, {name: 'Pracownik 2'}, {name: 'Pracownik 3'}]}\r\n                </Select>\r\n            </Panel>\r\n            <MainStyles>\r\n                <HoursStyles>\r\n                    <div className=\"header\">\r\n                        <p>Godz</p>\r\n                    </div>\r\n                    {hours.map(({ start }) => (\r\n                        <div className=\"hour\" key={start}>\r\n                            <p className=\"start\">{start}</p>\r\n                        </div>\r\n                    ))}\r\n                </HoursStyles>\r\n                <WorkersStyles>\r\n                    {workers.map(({ id, name, color }) => {\r\n                        return (\r\n                            <div className=\"column\" key={id} color={color}>\r\n                                <div className=\"header\">\r\n                                    <WorkerColor color={color} />\r\n                                    <p>{name}</p>\r\n                                </div>\r\n                                    {hours.map(({ start, end }) => (\r\n                                    <div className=\"field\" key={start}></div>\r\n                                ))}    \r\n                            </div>\r\n                        )\r\n                    })}\r\n                    {/* {workers.map(({ id, name, color }) => (\r\n                        <div className=\"workers\">\r\n                            <p className=\"header\">{name}</p>\r\n                            {hours.map(({ start, end }) => (\r\n                                <div className=\"field\"></div>\r\n                            ))}\r\n                        </div>\r\n                    ))} */}\r\n                </WorkersStyles>\r\n            </MainStyles>\r\n        </>\r\n    )\r\n}"],"sourceRoot":""}